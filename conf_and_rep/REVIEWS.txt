----------------------- REVIEW 1 ---------------------
PAPER: 2
TITLE: A Decision Procedure for (Co)datatypes in SMT Solvers
AUTHORS: Andrew Reynolds and Jasmin Christian Blanchette

OVERALL EVALUATION: 2 (accept)
REVIEWER'S CONFIDENCE: 3 (medium)

----------- REVIEW -----------
The paper presents a decision procedure for (co)inductive datatypes in the
context of SMT. The proposed algorithm extends previous work [2] that handled
only datatypes, showing how to support also codatatypes, i.e. "datatypes"
which might not be well-founded. The key idea of the procedure is the use of
\mu-terms to denote infinite constructor terms with cyclic
values. Intuitively, \mu-terms are used as representatives of the equivalence
classes induced by the input constraints, so that an inconsistency is detected
when a datatype class has a cyclic \mu-term as a representative, and a
uniqueness constraint is asserted when two codatatype classes have two
\mu-terms that are \alpha-equivalent as representatives.
The procedure is given as a set of inference rules, that are proved to be
sound and complete.
Besides the theoretical details, the paper includes some discussion about
implementation details inside the CVC4 SMT solver, and some experimental
results on problems generated by the Isabelle theorem prover, which show that
the new decision procedure allows CVC4 to solve several benchmarks that could
not be solved before (or that cannot be solved by Z3, which is used as for
comparison).

The paper is very well-written, and the contribution is clear. Not only the
paper extends the procedure of [2] to handle codatatypes, but in my opinion
also the description of the datatype part given here is easier to follow than
[2]. As the authors point out, using \mu-terms allows to handle datatypes and
codatatypes in a uniform manner, and makes the algorithm simple to understand
(at least at the high level).  The proofs of soundness and completeness are
quite technical at times, but the examples provided help to follow at least
the ideas. Therefore, I recommend acceptance.

My only, minor, remark is about the experimental evaluation. Perhaps the
authors could give some details about the impact (if any) of the new procedure
on the execution time of the benchmarks that could be solved already without
datatypes, or say if there are instances in which using the new procedure
fails but the old ones succeeded. I'm referring in particular to a sentence at
the end of section 5 that says "the stronger decision procedures *almost
completely subsume* the weaker ones in practice". What does this "almost
completely" mean exactly?


----------------------- REVIEW 2 ---------------------
PAPER: 2
TITLE: A Decision Procedure for (Co)datatypes in SMT Solvers
AUTHORS: Andrew Reynolds and Jasmin Christian Blanchette

OVERALL EVALUATION: 1 (weak accept)
REVIEWER'S CONFIDENCE: 3 (medium)

----------- REVIEW -----------
This paper introduces a decision procedures for (co)datatypes that can
be used inside DPLL(T)-based SMT solvers. Decision procedures for
datatypes have been implemented in CVC4 and Z3 for a while, but the
novelty of the paper is the support for co-datatypes.

In my opinion, the paper is well-written, both from the intuitive and
from the mathematical point of view. Proofs of termination, soundness
and completeness are given and experimental results are conducted,
showing that support for co-datatypes allows one to prove problems
that were out of the reach of, e.g. Z3 and CVC4. One thing is to
improved is that, whereas the theoretical description uses a mapping A
to check the applicability of the (probably) two most important rules,
in the implementation section a high-level description of how to
implement the rules without constructing A is described. I would move
that explanation the the theoretical part, explaining why A is
necessary (it is necessary for the correctness proofs, I guess) and
explaining in more detail which is the relationship between A and what
is implemented in practice.

The decision procedure can be seen as a refinement of the one
implemented in CVC4 (and previously published), where the changes due
to codatatypes are not many. However, proofs get slightly more
complicated because of that. All in all, this is a good paper but I
have some concerns as to whether this is enough contribution for CADE.


----------------------- REVIEW 3 ---------------------
PAPER: 2
TITLE: A Decision Procedure for (Co)datatypes in SMT Solvers
AUTHORS: Andrew Reynolds and Jasmin Christian Blanchette

OVERALL EVALUATION: 2 (accept)
REVIEWER'S CONFIDENCE: 2 (low)

----------- REVIEW -----------
This paper presents a decision procedure for both datatypes and codatatypes.
The procedure if formulated as a calculus, consisting of three sets of rules.
After presenting these rules a proof is given that the calculus is sound and
complete for the universal theory of (co)datatypes.

The procedure has also been implemented in CVC4, an SMT solver, and then
evaluated using problems from existing Isabelle formalisations. This
evaluation shows that the new procedure is an improvement on the state of
the art.

The paper is technically well written and clearly falls within the scope of
CADE. The work presented also has obvious motivation although the paper
itself does not explicitly express this motivation particularly well. As
someone without a specific background in this area I often found the details
fairly hard to read. However, the overall gist of the paper was still
relatively easy to follow.

It would be nice if the authors made it clearer how the results of this paper
follow on from the earlier work they generalize. In particular, I found it
unclear how much of the previous procedure was reused or whether it was just
used to guide the development of the new calculus.
